Multithreading





Multithreading is the ability of a program or an operating system process to manage its use by more than one user at a time and to even manage multiple requests by the same user without having to have multiple copies of the programming running in the computer. Each user request for a program or system service (and here a user can also be another program) is kept track of as a thread with a separate identity. As programs work on behalf of the initial request for that thread and are interrupted by other requests, the status of work on behalf of that thread is kept track of until the work is completed.



A thread is a flow of execution through the process code, with its own program counter, system registers and stack. A thread is also called a light weight process. Threads provide a way to improve application performance through parallelism. Threads represent a software approach to improving performance of operating system by reducing the overhead thread is equivalent to a classical process.

Each thread belongs to exactly one process and no thread can exist outside a process. Each thread represents a separate flow of control.Threads have been successfully used in implementing network servers and web server. They also provide a suitable foundation for parallel execution of applications on shared memory multiprocessors. Folowing figure shows the working of the single and multithreaded processes.

http://www.tutorialspoint.com/operating_system/os_multi_threading.htm


Thread is a basic unit of CPU utilization;it comprises a thread ID, aprogram counter, a register set,and a stack

Benefits of Multiththreading:

*Multithreading an interactive application may allow a program to continue running ven if part of it is blocked or is performing a lengthy operation,
thereby increasing responsiveness to the user.

*Resource sharing:By default,threads share the memory and the tesources of the process to which they belong.

*Economy:Allocating memory and resources for process creation is costly.Because threads share resources of the process to which they  belong, it is more economical to create and context-switch threads.

*Utilization of multiprocessor architectures-Threads may be running in parallel on different processors.A sigle threaded process can only run on one CPU, no matter how many available.



There are two types of threads : User level and kernel level threads



The ability of an operating system to execute different parts of a program, called threads, simultaneously. The programmer must carefully design the program in such a way that all the threads can run at the same time without interfering with each other.

Multi-threading is a term used to describe:

A facility provided by the operating system that enables an application to create threads of execution within a process

Applications whose architecture takes advantage of the multi-threading provided by the operating system