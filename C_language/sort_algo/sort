

Sorting

Sorting is arranging elements in a sequence based upon some criteria.

A sorting algorithm is an algorithm that puts elements of a list in a certain order.



Insertion Sort

Insertion sort iterates, consuming one input element each repetition, and growing a sorted output list. Each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there. It repeats until no input elements remain.







Algorithm:




variable key, in which we put each element of the array, in each pass, starting from the second element, that is a[1].

Then using the while loop, we iterate, until j becomes equal to zero or we find an element which is greater than key, and then we insert the key at that position.


For all the elements in the array starting from second

	variable key (in which we put each element of array in each pass)

	then iterate the loop until j becomes equal to zero or we find element greater than key

	insering key at that position





C-code

int insertion(int arr[],int n)
{
	int i,j;
	for(i=1; i<6; i++)
	{
  		key = a[i];
  		j = i-1;
  		while(j>=0 && key < a[j])
  		{
    		a[j+1] = a[j];
    		j--;
  		}
  	a[j+1] = key;
}


Time Complexity


Best Case:

The best case would be if the elements are already sorted. Then we will have n no. of iterations where n=no.of elements in the list
Time complexity will be O(n);

The worst case will be if the elements are present/sorted in the reverse order. There will be n*n iterations.
Time complexity will be O(n^2);

The Average time complexity is O(n^2).